def execute(command)
  system "#{command}"
end

desc 'Jekyll build and Node Babel all the things'
task :build do
  # Build all of the files
  # jekyll build

  # Switch to the Node directory
  # cd _node

  # Use Node and Babel to make the JavaScript more compatible
  # npm run make-compatible-js

  execute("jekyll build && cd _node && npm run make-compatible-js && cd ../")
end

desc 'Jekyll serve'
task :serve do
  # Build all of the files
  # jekyll build

  # Serve the files
  # jekyll serve

  # Use a custom configuration which skips the collections, since they don’t change often (but they slow Jekyll down a lot)
  # --config _config_dev.yml

  # Only rebuild the files that have changed
  # --incremental

  # Make the website available on the local network, to make testing on multiple devices possible
  # --host=0.0.0.0

  execute("jekyll build && jekyll serve --config _config_dev.yml --incremental --host=0.0.0.0")
end

desc 'Jekyll serve without building first'
task :fast do
  # Build all of the files
  # jekyll build

  # Serve the files
  # jekyll serve

  # Use a custom configuration which skips the collections, since they don’t change often (but they slow Jekyll down a lot)
  # --config _config_dev.yml

  # Only rebuild the files that have changed
  # --incremental

  # Make the website available on the local network, to make testing on multiple devices possible
  # --host=0.0.0.0

  execute("jekyll serve --config _config_dev.yml --incremental --host=0.0.0.0")
end
